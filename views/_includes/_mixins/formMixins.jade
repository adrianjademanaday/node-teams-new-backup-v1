mixin formGroup(name, label)
	.form-group
		label.col-md-4.control-label(for=name) #{label}		
		.col-md-7
			block


// TEXT

mixin text(name, label, value)
	+formGroup(name, label)
		input.form-control.input-md(name=name, type='text', value=value)

mixin textWithSuffix(name, label, suffix, value)
	+formGroup(name, label)
		.input-group
			input.form-control(type='text', value=value)
			span.input-group-addon #{suffix}

mixin password(name, label, value)
	+formGroup(name, label)
		input.form-control.input-md(name='textinput', type='password', value=value)
		
mixin textArea(name, label, value)
	+formGroup(name, label)
		textarea.form-control(name=name) #{value}

mixin hidden(name, value)
	input(name=name, type='hidden', value=value)


// FILE

mixin file(name, label)
	+formGroup(name, label)
		input.form-control.input-md(name=name, type='file')


// RADIO & CHECKBOX

mixin radio(name, label, options, selected)
	+formGroup(name, label)
		for o in options
			.radio
				label(for='radios-0')
					if o.id === selected
						input(type='radio', name=name, value=o.id, checked='checked')
						| #{o.name}
					else
						input(type='radio', name=name, value=o.id)
						| #{o.name}	

mixin inlineRadio(name, label, options, selected)
	+formGroup(name, label)
		for o in options
			label.radio-inline(for=o.id)
				if o.id === selected
					input(type='radio', name=name, value=o.name checked='checked')
					| #{o.name}
				else
					input(type='radio', name=name, value=o.name)
					| #{o.name}

mixin checkBox(name, label, options, selected)
	+formGroup(name, label)
		for o in options
			.checkbox
				label(for=o.id)
					if selected.indexOf(o.id) > -1
						input(type='checkbox', name=name, value=o.name, checked='checked')
						| #{o.name}
					else
						input(type='checkbox', name=name, value=o.name)
						| #{o.name}

mixin inlineCheckBox(name, label, options, selected)
	+formGroup(name, label)
		for o in options
			label.checkbox-inline(for=o.id)
				if selected.indexOf(o.id) > -1
					input(type='checkbox', name=name, value=o.name checked='checked')
					| #{o.name}
				else
					input(type='checkbox', name=name, value=o.name)
					| #{o.name}


// SELECT

mixin select(name, label, options, selected)
	+formGroup(name, label)
		select.form-control(name=name)
			option Select a value
			for o in options
				if o.id === selected
					option(value=o.id, selected='selected') #{o.name}
				else
					option(value=o.id) #{o.name}


// BUTTONS

mixin button(label, type)
	unless type == null
		input(class='btn btn-' + type, type='button', style='margin-right: 5px', value=label)
	else
		input.btn.btn-default(type='button', style='margin-right: 5px', value=label)			

mixin resetButton(label) 
	button.btn.btn-default(type='reset', style='margin-right: 5px') #{label == null ? 'Reset' : label}

mixin submitButton(label, value) 
	button.btn.btn-primary.btn-sm(type='submit', style='margin-right: 5px', value=value) #{label}

mixin urlButton(label, url, type)
	a(href=url, style='text-decoration: none;')
		+button(label, type)

mixin formActions(baseUrl)
	.form-group
		label.col-md-4.control-label #{label}		
		.col-md-8.well
			button.btn.btn-primary.btn-sm(type='submit', style='margin-right: 5px', value='SAVE_AND_ADD') Save and Add Another		
			button.btn.btn-primary.btn-sm(type='submit', style='margin-right: 5px', value='SAVE') Save			
			button.btn.btn-default.btn-sm(type='reset', style='margin-right: 5px') Reset
			a(href=baseUrl, style='text-decoration: none;')
				input.btn.btn-default.btn-sm(type='button', style='margin-right: 5px', value='Cancel')			


// DATE

mixin date(name, label, value)

mixin dateRange(name, fromvalue, toValue, fromLabel, toLabel)